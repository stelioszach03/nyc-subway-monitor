services:
  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: nyc-subway-timescaledb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: subway_monitor
    ports:
      - "5432:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: nyc-subway-redis
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: nyc-subway-backend
    environment:
      POSTGRES_HOST: timescaledb
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: subway_monitor
      REDIS_URL: redis://redis:6379/0
      PYTHONUNBUFFERED: 1
    ports:
      - "8000:8000"
    volumes:
      - ../backend:/app
      - model_artifacts:/app/models/artifacts
      - ../data:/app/data
    depends_on:
      timescaledb:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: python -m uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost:8000
        NEXT_PUBLIC_WS_URL: ws://localhost:8000
        NEXT_PUBLIC_MAPBOX_TOKEN: ${NEXT_PUBLIC_MAPBOX_TOKEN}
    container_name: nyc-subway-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      NODE_ENV: production

  grafana:
    image: grafana/grafana:latest
    container_name: nyc-subway-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin

  prometheus:
    image: prom/prometheus:latest
    container_name: nyc-subway-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

volumes:
  timescale_data:
  redis_data:
  model_artifacts:
  grafana_data:
  prometheus_data: